security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        in_memory_doc:
            memory:
                users:
                    watthelp:
                        password: watthelp
                        roles: 'ROLE_DOC'
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        doc:
            anonymous: true
            pattern: ^/doc
            provider: in_memory_doc
            http_basic:
                realm: Secured Area
        refresh:
            pattern: ^/token/refresh
            anonymous: true
            stateless: true
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /login
                username_path: email
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/doc, roles: ROLE_DOC }
        - { path: ^/token/refresh, methods: [POST], roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, methods: [POST], roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
